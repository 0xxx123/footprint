const express = require('express');\nconst path = require('path');\nconst mysql = require('mysql2/promise');\n\nconst app = express();\n\n// 数据库配置\nconst dbConfig = {\n    host: 'localhost',\n    user: 'root',     // 替换为你的MySQL用户名\n    password: 'root',     // 替换为你的MySQL密码\n    database: 'visitor_db'\n};\n\n// 创建数据库连接池\nconst pool = mysql.createPool(dbConfig);\n\n// 初始化数据库\nasync function initDatabase() {\n    try {\n        const connection = await pool.getConnection();\n        // 创建访问者计数表\n        await connection.execute(`\n            CREATE TABLE IF NOT EXISTS visitor_count (\n                id INT PRIMARY KEY DEFAULT 1,\n                count INT DEFAULT 0,\n                CHECK (id = 1)\n            )\n        `);\n        // 初始化记录\n        await connection.execute(`\n            INSERT IGNORE INTO visitor_count (id, count) VALUES (1, 0)\n        `);\n        connection.release();\n        console.log('Database initialized successfully');\n    } catch (error) {\n        console.error('Database initialization error:', error);\n    }\n}\n\n// 服务静态文件\napp.use(express.static(path.join(__dirname)));\n\n// 访问者计数接口\napp.get('/visitor', async (req, res) => {\n    try {\n        const connection = await pool.getConnection();\n        // 更新并获取访问者数量\n        await connection.execute('UPDATE visitor_count SET count = count + 1 WHERE id = 1');\n        const [rows] = await connection.execute('SELECT count FROM visitor_count WHERE id = 1');\n        connection.release();\n        \n        res.json({ count: rows[0].count });\n    } catch (error) {\n        console.error('Error updating visitor count:', error);\n        res.status(500).json({ error: 'Internal server error' });\n    }\n});\n\n// 初始化数据库并启动服务器\nconst PORT = 3000;\ninitDatabase().then(() => {\n    app.listen(PORT, () => {\n        console.log(`Server is running on http://localhost:${PORT}`);\n    });\n});